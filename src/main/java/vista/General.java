package vista;

import controlador.CVControlador;
import controlador.UsuariosControlador;
import vista.empleadoAltaVista;
import modelo.CVModelo;
import modelo.EmpleadoDAO;
import modelo.ReportesEmpleados;
import modelo.empleadoAlta;
import modelo.empleadoGestionBaja;
import modelo.opcionesNominaModelo;
import modelo.reporteNominaModelo;
import modelo.puestosModelo;
import modelo.ReportesEmpleados;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;
import controlador.UsuariosControlador;
import vista.UsuariosVista;
import modelo.UsuariosModelo;
import controlador.empleadoAltaControlador;
import controlador.opcionesNominaControlador;
import controlador.reporteNominaControlador;
import vista.calculoNominaVista;
import modelo.calculoNominaModelo;
import controlador.calculoNominaControlador;
import controlador.empleadoGestionControlador;
import controlador.puestosControlador;

import javax.swing.*;
import java.awt.Dimension;
import javax.swing.text.GapContent;
import java.io.File;
import java.sql.Connection;
import java.util.HashMap;
import java.util.Map;

public class General extends javax.swing.JFrame {
    // Módulo de Nómina
    private javax.swing.JMenu mnuNomina;
    private javax.swing.JMenuItem mnuNominaCalculoNomina;
    private javax.swing.JMenuItem mnuNominaSQM;
    private javax.swing.JMenuItem mnuNominaReportes;

    // Módulo de Gestión de Recursos Humanos
    private javax.swing.JMenu mnuGestionRH;
    private javax.swing.JMenuItem mnuGestionRHAltas;
    private javax.swing.JMenuItem mnuGestionRHGestionBajasActionPerformed;
    private javax.swing.JMenuItem mnuGestionRHHistoriasLaborales;

    // Módulo de Gestión de Prestaciones
    private javax.swing.JMenu mnuPrestaciones;
    private javax.swing.JMenuItem mnuPrestacionesPuestos;
    private javax.swing.JMenuItem mnuPrestacionesBeneficios;
    private javax.swing.JMenuItem mnuPrestacionesSeguridadSocial;

    // Módulo de Indicadores de Productividad
    private javax.swing.JMenu mnuIndicadores;
    private javax.swing.JMenuItem mnuIndicadoresMetricas;
    private javax.swing.JMenuItem mnuIndicadoresEvaluaciones;

    // Módulo de Reportes
    private javax.swing.JMenu mnuReportes;
    private javax.swing.JMenuItem mnuReportesRH;
    private javax.swing.JMenuItem mnuReportesFinancieros;

    // Módulo Administrativo
    private javax.swing.JMenu mnuAdmin;
    private javax.swing.JMenuItem mnuAdminComunicacion;
    private javax.swing.JMenuItem mnuAdminDocumentacion;
    private javax.swing.JMenuItem mnuAdminCapacitacion;
    private javax.swing.JMenuItem mnuCVs;

    // Menú de Ayuda
    private javax.swing.JMenu mnuAyudas;
    private javax.swing.JMenuItem mnuUsuariosRH;

    /**
     * Creates new form MdiGeneral
     */
    public General() {
        ImageIcon image = new ImageIcon("bin/icons/10612410.png");
        setTitle("Recursos humanos Empresa S.A.");
        setIconImage(image.getImage());//Ponemos una imagen como icono de la ventana
        setLocationRelativeTo(null);

        initComponents();
        setLocationRelativeTo(null);
        setExtendedState(General.MAXIMIZED_BOTH);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    
    private void initComponents() {
        // ***** Creacion de barra de menus con sus items *****
        jDesktopPane1 = new JDesktopPane();
        jMenuBar1 = new JMenuBar();
        mnuSesion = new JMenu();
        mnuSesionCambiarSesion = new JMenuItem();
        mnuSesionCerrarSesion = new JMenuItem();
    
        // Módulo de Nómina
        mnuNomina = new JMenu("Nómina");
        mnuNominaCalculoNomina = new JMenuItem("Cálculo de Nómina");
        mnuNominaSQM = new JMenuItem("Nomina (Semanal/Quincenal/Mensual)");
        mnuNominaReportes = new JMenuItem("Reportes de Nómina");
    
        // Módulo de Gestión de Recursos Humanos
        mnuGestionRH = new JMenu("Gestión de RH");
        mnuGestionRHAltas = new JMenuItem("Altas");
        mnuGestionRHGestionBajasActionPerformed = new JMenuItem("Gestion y bajas");
        mnuGestionRHHistoriasLaborales = new JMenuItem("Historias Laborales");
    
        // Módulo de Gestión de Prestaciones
        mnuPrestaciones = new JMenu("Prestaciones");
        mnuPrestacionesPuestos = new JMenuItem("Puestos");
        mnuPrestacionesBeneficios = new JMenuItem("Beneficios");
        mnuPrestacionesSeguridadSocial = new JMenuItem("Seguridad Social");
    
        // Módulo de Indicadores de Productividad
        mnuIndicadores = new JMenu("Indicadores");
        mnuIndicadoresMetricas = new JMenuItem("Métricas");
        mnuIndicadoresEvaluaciones = new JMenuItem("Evaluaciones");
    
        // Módulo de Reportes
        mnuReportes = new JMenu("Reportes");
        mnuReportesRH = new JMenuItem("Reportes de RH");
        mnuReportesFinancieros = new JMenuItem("Reportes Financieros");
    
        // Módulo Administrativo
        mnuAdmin = new JMenu("Administrativo");
        mnuAdminComunicacion = new JMenuItem("Comunicación Interna");
        mnuAdminDocumentacion = new JMenuItem("Documentación");
        mnuAdminCapacitacion = new JMenuItem("Capacitación y Desarrollo");
        mnuCVs = new JMenuItem("Gestión de Curriculum Vitae");
    
        // Menú de Ayuda
        mnuAyudas = new JMenu("Ayuda");
        mnuUsuariosRH = new JMenuItem("Usuarios RH");
    
        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
    
        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 279, Short.MAX_VALUE)
        );
    
        // Configuración del menú de Sesión
        mnuSesion.setText("Sesión");
    
        mnuSesionCambiarSesion = new javax.swing.JMenuItem("Cambiar Usuario");

        // Usar ActionListener anónimo
        mnuSesionCambiarSesion.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                System.out.println("Cambiar de usuario");
            }
        });
        mnuSesion.add(mnuSesionCambiarSesion);
    
        mnuSesionCerrarSesion.setText("Cerrar Sesión");
        mnuSesionCerrarSesion.addActionListener(this::mnuSesionCerrarSesionActionPerformed);
        mnuSesion.add(mnuSesionCerrarSesion);
    
        jMenuBar1.add(mnuSesion);
    
        // Configuración del módulo de Nómina
        mnuNominaCalculoNomina.addActionListener(this::mnuNominaCalculoNominaActionPerformed);
        mnuNominaSQM.addActionListener(this::mnuNominaSQMActionPerformed);
        mnuNominaReportes.addActionListener(this::mnuNominaReportesActionPerformed);

        mnuNomina.add(mnuNominaCalculoNomina);
        mnuNomina.add(mnuNominaSQM);
        mnuNomina.add(mnuNominaReportes);
    
        jMenuBar1.add(mnuNomina);
    
        // Configuración del módulo de Gestión de RH
        mnuGestionRHAltas.addActionListener(this::mnuGestionRHAltasActionPerformed);
        mnuGestionRHGestionBajasActionPerformed.addActionListener(this::mnuGestionRHGestionBajasActionPerformed);
        mnuGestionRHHistoriasLaborales.addActionListener(this::mnuGestionRHHistoriasLaboralesActionPerformed);
    
        mnuGestionRH.add(mnuGestionRHAltas);
        mnuGestionRH.add(mnuGestionRHGestionBajasActionPerformed);
        mnuGestionRH.add(mnuGestionRHHistoriasLaborales);
    
        jMenuBar1.add(mnuGestionRH);
    
        // Configuración del módulo de Prestaciones
        mnuPrestacionesPuestos.addActionListener(this::mnuPrestacionesPuestosActionPerformed);
        mnuPrestacionesBeneficios.addActionListener(this::mnuPrestacionesBeneficiosActionPerformed);
        mnuPrestacionesSeguridadSocial.addActionListener(this::mnuPrestacionesSeguridadSocialActionPerformed);
    
        mnuPrestaciones.add(mnuPrestacionesPuestos);
        mnuPrestaciones.add(mnuPrestacionesBeneficios);
        mnuPrestaciones.add(mnuPrestacionesSeguridadSocial);
    
        jMenuBar1.add(mnuPrestaciones);
    
        // Configuración del módulo de Indicadores
        mnuIndicadoresMetricas.addActionListener(this::mnuIndicadoresMetricasActionPerformed);
        mnuIndicadoresEvaluaciones.addActionListener(this::mnuIndicadoresEvaluacionesActionPerformed);
    
        mnuIndicadores.add(mnuIndicadoresMetricas);
        mnuIndicadores.add(mnuIndicadoresEvaluaciones);
    
        jMenuBar1.add(mnuIndicadores);
    
        // Configuración del módulo de Reportes
        mnuReportesRH.addActionListener(this::mnuReportesRHActionPerformed);
        mnuReportesFinancieros.addActionListener(this::mnuReportesFinancierosActionPerformed);
    
        mnuReportes.add(mnuReportesRH);
        mnuReportes.add(mnuReportesFinancieros);
    
        jMenuBar1.add(mnuReportes);
    
        // Configuración del módulo Administrativo
        mnuAdminComunicacion.addActionListener(this::mnuAdminComunicacionActionPerformed);
        mnuAdminDocumentacion.addActionListener(this::mnuAdminDocumentacionActionPerformed);
        mnuAdminCapacitacion.addActionListener(this::mnuAdminCapacitacionActionPerformed);
        mnuCVs.addActionListener(this::mnuCVsActionPerformed);
    
        mnuAdmin.add(mnuAdminComunicacion);
        mnuAdmin.add(mnuAdminDocumentacion);
        mnuAdmin.add(mnuAdminCapacitacion);
        mnuAdmin.add(mnuCVs);
    
        jMenuBar1.add(mnuAdmin);
    
        // Menú de Ayuda
        mnuUsuariosRH.addActionListener(this::mnuUsuariosRHActionPerformed);
        mnuAyudas.add(mnuUsuariosRH);
        jMenuBar1.add(mnuAyudas);

        setJMenuBar(jMenuBar1);
    
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1)
        );
    
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mnuNominaCalculoNominaActionPerformed(java.awt.event.ActionEvent evt) {
        System.out.println("Iniciando apertura de la vista de cálculo de nómina...");
    
        // Instancia de la vista
        calculoNominaVista vista = new calculoNominaVista();
        System.out.println("Vista instanciada correctamente.");
    
        // Instancia del modelo
        calculoNominaModelo modelo = new calculoNominaModelo();
        System.out.println("Modelo instanciado correctamente.");
    
        // Crear el controlador
        calculoNominaControlador controlador = new calculoNominaControlador(modelo, vista);
        System.out.println("Controlador creado correctamente.");
    
        // Agregar la vista al jDesktopPane
        jDesktopPane1.add(vista);
        System.out.println("Vista agregada al jDesktopPane.");
    
        // Centrar la ventana en el escritorio
        Dimension desktopSize = jDesktopPane1.getSize();
        Dimension frameSize = vista.getSize();
        vista.setLocation((desktopSize.width - frameSize.width) / 2, 
                         (desktopSize.height - frameSize.height) / 2);
        System.out.println("Vista centrada en el escritorio.");
    
        // Hacer visible la ventana
        vista.setVisible(true);
        System.out.println("Vista hecha visible.");
    }

    private void mnuNominaSQMActionPerformed(java.awt.event.ActionEvent evt) {
    System.out.println("Abrir módulo de Nómina (Semanal/Quincenal/Mensual)");

    // Instancia de la vista
    opcionesNominaVista vista = new opcionesNominaVista();

    // Instancia del modelo
    opcionesNominaModelo modelo = new opcionesNominaModelo();

    // Crear el controlador pasándole las instancias de la vista y el modelo
    opcionesNominaControlador controlador = new opcionesNominaControlador(vista, modelo);

    // Agregar la vista de nómina al jDesktopPane
    jDesktopPane1.add(vista); // Aquí agregas la vista en lugar del controlador

    // Centrar la ventana en el escritorio
    Dimension desktopSize = jDesktopPane1.getSize();
    Dimension frameSize = vista.getSize(); // Usamos la vista, no el controlador
    vista.setLocation((desktopSize.width - frameSize.width) / 2,
            (desktopSize.height - frameSize.height) / 2);

    // Hacer visible la ventana
    vista.setVisible(true);

    // Configurar el cierre de la ventana
    vista.setDefaultCloseOperation(JInternalFrame.DISPOSE_ON_CLOSE);
}
    private reporteNominaVista vistaReportes;
    private void mnuNominaReportesActionPerformed(java.awt.event.ActionEvent evt) {
    System.out.println("Abrir módulo de reportes");

    // Crear una instancia del modelo
    reporteNominaModelo modelo = new reporteNominaModelo();

    // Crear una instancia de la vista
    reporteNominaVista vistaReportes = new reporteNominaVista();

    // Crear una instancia del controlador y vincularlo con el modelo y la vista
    reporteNominaControlador controlador = new reporteNominaControlador(modelo, vistaReportes);

    // Mostrar la ventana de reportes
    if (vistaReportes == null || !vistaReportes.isVisible()) {
        vistaReportes.setVisible(true); // Mostrar la ventana si no está visible
    } else {
        vistaReportes.toFront(); // Traer la ventana existente al frente
    }
}

    private void mnuGestionRHAltasActionPerformed(java.awt.event.ActionEvent evt) {
        System.out.println("Abrir módulo de altas");

        empleadoAltaVista vista = new empleadoAltaVista(); // Instancia de la vista
        empleadoAlta modelo = new empleadoAlta(); // Instancia del modelo

        // Crear el controlador pasándole las instancias de la vista y el modelo
        empleadoAltaControlador controlador = new empleadoAltaControlador(vista, modelo);

        // Agregar la vista de empleados al jDesktopPane
        jDesktopPane1.add(vista); // Aquí agregas la vista en lugar del controlador

        // Centrar la ventana en el escritorio
        Dimension desktopSize = jDesktopPane1.getSize();
        Dimension frameSize = vista.getSize(); // Usamos la vista, no el controlador
        vista.setLocation((desktopSize.width - frameSize.width) / 2,
                (desktopSize.height - frameSize.height) / 2);

        // Hacer visible la ventana
        vista.setVisible(true);

    }

    private void mnuGestionRHGestionBajasActionPerformed(java.awt.event.ActionEvent evt) {
        System.out.println("Abrir módulo de gestion y bajas");

    empleadoGestionVista vista = new empleadoGestionVista();  // Instancia de la vista
    empleadoGestionBaja modelo = new empleadoGestionBaja();           // Instancia del modelo

    // Crear el controlador pasándole las instancias de la vista y el modelo
    empleadoGestionControlador GestionControlador = new empleadoGestionControlador(vista, modelo);

    // Agregar la vista de empleados al jDesktopPane
    jDesktopPane1.add(vista); // Aquí agregas la vista en lugar del controlador

    // Centrar la ventana en el escritorio
    Dimension desktopSize = jDesktopPane1.getSize();
    Dimension frameSize = vista.getSize(); // Usamos la vista, no el controlador
    vista.setLocation((desktopSize.width - frameSize.width) / 2, 
                     (desktopSize.height - frameSize.height) / 2);

    // Hacer visible la ventana
    vista.setVisible(true);
    }

    private void mnuGestionRHHistoriasLaboralesActionPerformed(java.awt.event.ActionEvent evt) {
        System.out.println("Abrir módulo de historias laborales");
    }

    private void mnuPrestacionesPuestosActionPerformed(java.awt.event.ActionEvent evt) {
        System.out.println("Abrir módulo de puestos");

        puestosVista vista = new puestosVista(); // Instancia de la vista
        puestosModelo modelo = new puestosModelo(); // Instancia del modelo

        // Crear el controlador pasándole las instancias de la vista y el modelo
        puestosControlador controlador = new puestosControlador(vista, modelo);

        // Agregar la vista de empleados al jDesktopPane
        jDesktopPane1.add(vista); // Aquí agregas la vista en lugar del controlador

        // Centrar la ventana en el escritorio
        Dimension desktopSize = jDesktopPane1.getSize();
        Dimension frameSize = vista.getSize(); // Usamos la vista, no el controlador
        vista.setLocation((desktopSize.width - frameSize.width) / 2,
                (desktopSize.height - frameSize.height) / 2);

        // Hacer visible la ventana
        vista.setVisible(true);

    }

    private void mnuPrestacionesBeneficiosActionPerformed(java.awt.event.ActionEvent evt) {
        System.out.println("Abrir módulo de beneficios");
    }

    private void mnuPrestacionesSeguridadSocialActionPerformed(java.awt.event.ActionEvent evt) {
        System.out.println("Abrir módulo de seguridad social");
    }

    private void mnuIndicadoresMetricasActionPerformed(java.awt.event.ActionEvent evt) {
        System.out.println("Abrir módulo de métricas");
    }

    private void mnuIndicadoresEvaluacionesActionPerformed(java.awt.event.ActionEvent evt) {
        System.out.println("Abrir módulo de evaluaciones");
    }
    
    private void mnuReportesRHActionPerformed(java.awt.event.ActionEvent evt) {
        Connection conn = null;        
        Map p = new HashMap();
        JasperReport report;
        JasperPrint print;

        try {
            conn = ReportesEmpleados.getConnection();
            report = JasperCompileManager.compileReport(new File("").getAbsolutePath()
                    + "/src/main/java/reportes/ReporteEmpleado.jrxml");
	    print = JasperFillManager.fillReport(report, p, conn);
            JasperViewer view = new JasperViewer(print, false);
	    view.setTitle("Reporte Prueba");
            view.setVisible(true);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void mnuReportesFinancierosActionPerformed(java.awt.event.ActionEvent evt) {
        System.out.println("Abrir módulo de reportes financieros");
    }

    private void mnuAdminComunicacionActionPerformed(java.awt.event.ActionEvent evt) {
        System.out.println("Abrir módulo de comunicación interna");
    }

    private void mnuAdminDocumentacionActionPerformed(java.awt.event.ActionEvent evt) {
        System.out.println("Abrir módulo de documentación");
    }

    private void mnuAdminCapacitacionActionPerformed(java.awt.event.ActionEvent evt) {
        System.out.println("Abrir módulo de capacitación y desarrollo");
    }

    private void mnuCVsActionPerformed(java.awt.event.ActionEvent evt) {
        // Instancias de la vista, modelo y controlador
        CVVista vista = new CVVista();  // Asegúrate de que CVVista sea un JInternalFrame
        CVModelo modelo = new CVModelo();
        CVControlador controlador = new CVControlador(modelo, vista);
    
        // Configuración de la vista
        vista.setSize(800, 600); // Define un tamaño para la vista
        vista.setVisible(true);
    
        // Agregar la vista al JDesktopPane
        jDesktopPane1.add(vista); // Asegúrate de que jDesktopPane1 esté inicializado y visible
    
        // Centrar la vista en el JDesktopPane
        Dimension desktopSize = jDesktopPane1.getSize();
        Dimension frameSize = vista.getSize();
        vista.setLocation((desktopSize.width - frameSize.width) / 2, 
                          (desktopSize.height - frameSize.height) / 2);
    
        // Opcional: Configurar el cierre de la vista
        vista.setDefaultCloseOperation(JInternalFrame.DISPOSE_ON_CLOSE);
    }

    private void mnuUsuariosRHActionPerformed(java.awt.event.ActionEvent evt) {
        System.out.println("Abrir menu de usuarios RH");

        UsuariosVista vista = new UsuariosVista();  // Instancia de la vista
        UsuariosModelo modelo = new UsuariosModelo();           // Instancia del modelo

    // Crear el controlador pasándole las instancias de la vista y el modelo
    UsuariosControlador controlador = new UsuariosControlador (vista, modelo);

    // Agregar la vista de empleados al jDesktopPane
    jDesktopPane1.add(vista); // Aquí agregas la vista en lugar del controlador

    // Centrar la ventana en el escritorio
    Dimension desktopSize = jDesktopPane1.getSize();
    Dimension frameSize = vista.getSize(); // Usamos la vista, no el controlador
    vista.setLocation((desktopSize.width - frameSize.width) / 2, 
                     (desktopSize.height - frameSize.height) / 2);

    // Hacer visible la ventana
    vista.setVisible(true);

    vista.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }


    // ****** Funcionalidad de botones y barras de menu ******
    private void mnuSesionCerrarSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuArchivoAbrirSesionActionPerformed
        Login login = new Login();
        dispose();
    }//GEN-LAST:event_mnuArchivoAbrirSesionActionPerformed

    private void mnuSeguridadBitacoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuSeguridadBitacoraActionPerformed
        // TODO add your handling code here:
        /*frmMantenimientoBitacora ventana = new frmMantenimientoBitacora();
        jDesktopPane1.add(ventana);
        Dimension desktopSize = jDesktopPane1.getSize();
        Dimension FrameSize = ventana.getSize();
        ventana.setLocation((desktopSize.width - FrameSize.width) / 2, (desktopSize.height - FrameSize.height) / 2);
        */
    }//GEN-LAST:event_mnuSeguridadBitacoraActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(General.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(General.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(General.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(General.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new General().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu mnuSesion;
    private javax.swing.JMenuItem mnuSesionCambiarSesion;
    private javax.swing.JMenuItem mnuSesionCerrarSesion;
    private javax.swing.JMenu mnuSeguridad;
    private javax.swing.JMenuItem mnuSeguridadBitacora;
    // End of variables declaration//GEN-END:variables
}


